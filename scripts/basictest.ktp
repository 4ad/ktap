

print("testing: normal function call")
function f(a, b)
	if (a ~= 0 and b ~= 1) then
		print("failed");
	end
	return a+1, b+1
end


na, nb = f(0, 1)
if (na ~= 1 and nb ~= 2) then
	print("failed");
end

---------------------------------
print("testing: string compare")
local a="zhang"
local b="zhan"

if (a > b) then
else
	print("failed")
end

---------------------------------
print("testing: forloop")
local variable
count = 0
for variable = 0, 100000, 1 do
	count = count + 1
end

if (count ~= 100001) then
	print("failed")
end

---------------------------------
print("testing: whileloop")
count = 0
i = 1
while i <= 5 do
	count = count + 1
	i = i + 1
end
if (count ~= 5) then
	print("failed")
end

---------------------------------
print("testing: table set")
days = {"Sunday", "Monday", "Tuesday", "Wednesday",
            "Thursday", "Friday", "Saturday"}

if (days[2] ~= "Monday") then
	print("failed")
end

days["endday"] = "20121220"
if (days["endday"] ~= "20121220") then
	print("failed")
end

os.trace("syscall:open");

---------------------------------
print("testing: sleep 5 seconds")
os.sleep(1000 * 5)

---------------------------------
print("testing: wait")
os.wait()
print("\treturn from wait");


---os.kprobe("schedule")
---os.uprobe("malloc");

