#! /usr/bin/env ktap

# Based on systemtap traceio.stp

reads = {}
writes = {}
total_io = {}

trace "syscalls:sys_exit_read" function (e) {
	local ret = e.field(2)
	table_count(reads, execname(), ret)
	table_count(total_io, execname(), ret)
}

trace "syscalls:sys_exit_write" function (e) {
	local ret = e.field(2)
	table_count(writes, execname(), ret)
	table_count(total_io, execname(), ret)
}

function humanread_digit(bytes) {
	if (bytes > 1024*1024*1024) {
		return bytes/1024/1024/1024
	} elseif (bytes > 1024*1024) {
		return bytes/1024/1024
	} elseif (bytes > 1024) {
		return bytes/1024
	} else {
		return bytes
	}
}

function humanread_x(bytes) {
	if (bytes > 1024*1024*1024) {
		return " GiB"
	} elseif (bytes > 1024*1024) {
		return " MiB"
	} elseif (bytes > 1024) {
		return " KiB"
	} else {
		return "   B"
	}
}

timer.s(1, function () {
	ansi.clear_screen()
	for (exec, count in pairs(total_io)) {
		local readnum = reads[exec]
		local writenum = writes[exec]
		printf("%15s r: %12d%s w: %12d%s\n", exec,
			humanread_digit(readnum), humanread_x(readnum),
			humanread_digit(writenum), humanread_x(writenum))
	}
	printf("\n")
})

